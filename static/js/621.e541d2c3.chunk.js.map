{"version":3,"file":"static/js/621.e541d2c3.chunk.js","mappings":"6OAEMA,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAQ,gEAGCC,EAAI,mCAAG,+GAEWH,EAASI,MAFpB,cAENC,EAFM,OAGNC,EAAOD,EAASC,KAHV,kBAILA,GAJK,sCAMZC,QAAQC,MAAM,4OAAd,MANY,8DAAH,qDCqCjB,I,MACA,EAAe,IAA0B,2D,SC1C5BC,EAAcC,EAAAA,EAAAA,IAAH,gKASXC,EAAYD,EAAAA,EAAAA,IAAH,+FAMTE,EAAiBF,EAAAA,EAAAA,OAAH,4P,2BCuB3B,I,IAAA,EAjCA,YAA2B,IAARG,EAAO,EAAPA,IACbC,GAAWC,EAAAA,EAAAA,MACXC,EAAUH,EAAIG,QAAQC,QAAQ,cAAe,IAAIA,QAAQ,MAAO,IAEhEC,GADYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,aAAaC,SAAvB,IACTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAOZ,EAAIY,EAAxB,IAUrC,OACE,UAAChB,EAAD,YACM,SAACE,EAAD,CAAWe,IAAKb,EAAIc,IAAKC,IAAKf,EAAIgB,SAClC,SAACjB,EAAD,CAAgBkB,QATQ,WAChC,IAAMC,GAASC,EAAAA,EAAAA,IAAyB,CAAEC,MAAOpB,EAAIY,GAAIS,QAASrB,IAClEC,EAASiB,EACV,EAM2DI,MAAO,CAAEC,MAAOlB,EAAU,OAAS,WAArF,UACG,gBACT,aAAW,cACXmB,MAAM,KACNC,OAAO,KAHE,UAKT,gBAAKC,KAAMC,EAAS,iBAGlB,0BAAK3B,EAAI4B,KAAK,IAAE5B,EAAIgB,MAAM,KAAGhB,EAAI6B,KAAK,KAAG7B,EAAI8B,gBAC7C,yBAAI3B,EAAQ,IAAEH,EAAI+B,cAAc,QAChC,yBAAI/B,EAAIgC,KAAK,IAAEhC,EAAIgB,MAAM,IAAEhB,EAAIY,GAAG,IAAEZ,EAAIiC,gBAAgB,QAG7D,ECjCKC,EAAmBrC,EAAAA,EAAAA,IAAH,yxBAoBhBsC,EAAiBtC,EAAAA,EAAAA,IAAH,65BAmCpB,MA1BA,WACE,OAA8BuC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEuBjD,IAFvB,OAEUG,EAFV,OAGI6C,EAAW7C,GAHf,gDAKIC,QAAQC,QALZ,0DADc,uBAAC,WAAD,wBASd6C,EACD,GAAE,KAGD,SAACN,EAAD,UACGG,EAAQI,KAAI,SAACzC,GAAD,OACX,SAACmC,EAAD,WACE,SAAC,EAAD,CAASnC,IAAKA,KADKA,EAAIY,GADd,KAOlB,C","sources":["component/API/API.js","assets/sprite.svg","component/Cards/CarCard.styled.js","component/Cards/CarMainCard.js","component/pages/CarList.js"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL:'https://649b68d9bf7c145d023a48c2.mockapi.io/api/advertsCars'\n})\n\nexport const cars = async () => {\n    try {\n        const response = await instance.get();\n        const data = response.data;\n        return data;\n    } catch (error) {\n        console.error('Помилка при завантаженні даних автомобілів:', error);\n        throw error; \n    }\n}","var _symbol;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 0,\n    height: 0,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"normal\",\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"transparent\",\n    stroke: \"white\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.6301 3.45753C15.247 3.07428 14.7922 2.77026 14.2916 2.56284C13.791 2.35542 13.2545 2.24866 12.7126 2.24866C12.1707 2.24866 11.6342 2.35542 11.1336 2.56284C10.633 2.77026 10.1782 3.07428 9.79509 3.45753L9.00009 4.25253L8.20509 3.45753C7.43132 2.68376 6.38186 2.24906 5.28759 2.24906C4.19331 2.24906 3.14386 2.68376 2.37009 3.45753C1.59632 4.2313 1.16162 5.28075 1.16162 6.37503C1.16162 7.4693 1.59632 8.51876 2.37009 9.29253L3.16509 10.0875L9.00009 15.9225L14.8351 10.0875L15.6301 9.29253C16.0133 8.90946 16.3174 8.45464 16.5248 7.95404C16.7322 7.45345 16.839 6.91689 16.839 6.37503C16.839 5.83316 16.7322 5.2966 16.5248 4.79601C16.3174 4.29542 16.0133 3.84059 15.6301 3.45753Z\",\n    stroke: \"white\",\n    strokeOpacity: 0.8,\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.f2fc402162ed1f3ee226127849bbbb85.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"@emotion/styled\"\n\nexport const CardWrapper = styled.div`\nposition: relative;\ndisplay: flex;\nflex-direction: column;\nwidth: 274px;\nheight: 426px;\nborder-radius:8px;\nfont-family: Manrope;\n`\nexport const CardImage = styled.img`\nobject-fit: cover;\nwidth: 100%;\nheight: 268px;\nborder-radius:14px;\n`\nexport const FavoriteButton = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: color 0.3s;\n\n  &:hover {\n    color: blue;\n  }\n\n  &:active {\n    color: blue;\n  }\n`;","import React from \"react\";\nimport sprite from '../../assets/sprite.svg'\nimport { CardWrapper, CardImage, FavoriteButton } from \"./CarCard.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport  { toggleFavoriteCarAction } from \"../Redux/carSlice\"\n\n\nfunction CarCard({ car }) {\nconst dispatch = useDispatch()\nconst address = car.address.replace(/^[^,]+,\\s*/g, '').replace(/,+/g, '');\nconst likedCars = useSelector(state => state.favoriteCars.likedCars);\nconst isLiked = likedCars.some(likedCar => likedCar.id === car.id);\n\n    \n\n  const handleToggleFavoriteCar = () => {\n  const action = toggleFavoriteCarAction ({ carId: car.id, carData: car }); \n  dispatch(action);\n};\n\n\n  return (\n    <CardWrapper>\n          <CardImage src={car.img} alt={car.model} />\n          <FavoriteButton onClick={handleToggleFavoriteCar} style={{ color: isLiked ? 'blue' : 'inherit' }}>\n             <svg\n    aria-label=\"filter icon\"\n    width=\"16\"\n    height=\"16\"\n  >\n    <use href={sprite + '#normal'}></use>\n  </svg>\n          </FavoriteButton>\n      <h2>{car.make} {car.model}, {car.year}  {car.rentalPrice}</h2>\n      <p>{address} {car.rentalCompany} </p>\n      <p>{car.type} {car.model} {car.id} {car.functionalities[0]}</p>\n    </CardWrapper>\n  );\n}\n\nexport default CarCard;","import { useEffect, useState } from \"react\";\nimport { cars } from \"../API/API\";\nimport CarCard from \"../Cards/CarMainCard\";\nimport styled from '@emotion/styled';\n\nconst CarListContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  > div {\n    margin-right: 29px; /* 29px між картками */\n    margin-bottom: 50px; /* 50px між рядками карток */\n\n    @media (max-width: 768px) {\n      margin-right: 0;\n      margin-bottom: 20px; /* Мобільні пристрої мають менше відстані між рядками */\n    }\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst CarCardWrapper = styled.div`\n  width: calc(25% - 29px); /* Розділити на 4 картки на рядку з міжкартковими відстанями */\n  box-sizing: border-box; /* Забезпечує відповідний розмір, включаючи margin та padding */\n  \n  @media (max-width: 768px) {\n    width: 100%; /* Одна карта на рядок на мобільних пристроях */\n  }\n`;\n\nfunction CarList() {\n  const [carList, setCarList] = useState([]);\n\n  useEffect(() => {\n    async function fetchCars() {\n      try {\n        const data = await cars();\n        setCarList(data);\n      } catch (error) {\n        console.error();\n      }\n    }\n    fetchCars();\n  }, []);\n\n  return (\n    <CarListContainer>\n      {carList.map((car) => (\n        <CarCardWrapper key={car.id}>\n          <CarCard car={car} />\n        </CarCardWrapper>\n      ))}\n    </CarListContainer>\n  );\n}\n\nexport default CarList;\n"],"names":["instance","axios","baseURL","cars","get","response","data","console","error","CardWrapper","styled","CardImage","FavoriteButton","car","dispatch","useDispatch","address","replace","isLiked","useSelector","state","favoriteCars","likedCars","some","likedCar","id","src","img","alt","model","onClick","action","toggleFavoriteCarAction","carId","carData","style","color","width","height","href","sprite","make","year","rentalPrice","rentalCompany","type","functionalities","CarListContainer","CarCardWrapper","useState","carList","setCarList","useEffect","fetchCars","map"],"sourceRoot":""}